generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int        @id @default(autoincrement())
  full_name        String
  email            String     @unique
  phone            String?
  password         String
  role             String     @default("guest")
  createdAt        DateTime   @default(now())
  bookings         Booking[]
  propertiesOwned  Property[] @relation("OwnerProperties")
  propertiesHosted Property[] @relation("HostProperties")
  reviews          Review[]
}

model Property {
  id          Int      @id @default(autoincrement())
  name        String
  location    String
  price       Float
  description String?
  images      String[]
  ownerId     Int
  hostId      Int?
  createdAt   DateTime @default(now())

  // ðŸ§© Fix ambiguous relations with User
  owner User  @relation("OwnerProperties", fields: [ownerId], references: [id])
  host  User? @relation("HostProperties", fields: [hostId], references: [id])

  // ðŸ†• Add missing reverse relations:
  bookings Booking[]
  reviews  Review[]
}

model Booking {
  id         Int       @id @default(autoincrement())
  propertyId Int
  userId     Int
  checkIn    DateTime
  checkOut   DateTime
  totalPrice Float
  commission Float
  status     BookingStatus @default(PENDING) // âœ… add enum field
  createdAt  DateTime @default(now())
  property   Property  @relation(fields: [propertyId], references: [id])
  user       User      @relation(fields: [userId], references: [id])
  payments   Payment[]
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

model Review {
  id         Int      @id @default(autoincrement())
  propertyId Int
  userId     Int
  rating     Int
  comment    String?
  createdAt  DateTime @default(now())

  property Property @relation(fields: [propertyId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
}

model Payment {
  id        Int     @id @default(autoincrement())
  amount    Float
  method    String
  provider  String?
  status    String
  reference String?
  bookingId Int
  booking   Booking @relation(fields: [bookingId], references: [id])
}
